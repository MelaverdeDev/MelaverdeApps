<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/MelaverdeApps/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/MelaverdeApps/" rel="alternate" type="text/html" /><updated>2023-07-24T16:29:00+02:00</updated><id>http://localhost:4000/MelaverdeApps/feed.xml</id><title type="html">MelaverdeApps</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">New privacy policy</title><link href="http://localhost:4000/MelaverdeApps/updates/2023/07/22/welcome-to-jekyll.html" rel="alternate" type="text/html" title="New privacy policy" /><published>2023-07-22T10:00:00+02:00</published><updated>2023-07-22T10:00:00+02:00</updated><id>http://localhost:4000/MelaverdeApps/updates/2023/07/22/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/MelaverdeApps/updates/2023/07/22/welcome-to-jekyll.html"><![CDATA[<p>#You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches #a web server and auto-regenerates your site when a file is updated.</p>

<p>#Jekyll requires blog post files to be named according to the following format:</p>

<p>#<code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>#Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the #source for this post to get an idea about how it works.</p>

<p>#Jekyll also offers powerful support for code snippets:</p>

<p>#</p>
<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1">#def print_hi(name)</span>
<span class="c1">#  puts "Hi, #{name}"</span>
<span class="c1">#end</span>
<span class="c1">#print_hi('Tom')</span>
<span class="c1">##=&gt; prints 'Hi, Tom' to STDOUT.</span>
<span class="c1">#</span></code></pre></figure>

<p>#Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk]#[jekyll-talk].</p>

<p>#[jekyll-docs]: https://jekyllrb.com/docs/home
#[jekyll-gh]:   https://github.com/jekyll/jekyll
#[jekyll-talk]: https://talk.jekyllrb.com/</p>]]></content><author><name></name></author><category term="updates" /><summary type="html"><![CDATA[#You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches #a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>